version: '3.5'
services:
  api1: # API - Instância 01
    image: rinha-backend-kotlin
    hostname: api1
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    expose:
      - "8080"
    environment:
      # https://docs.oracle.com/en/java/javase/11/gctuning/garbage-first-garbage-collector-tuning.html#GUID-0770AB01-E334-4E23-B307-FD2114B16E0E
      # https://docs.oracle.com/cd/E40972_01/doc.70/e40973/cnf_jvmgc.htm#autoId2
      JAVA_TOOL_OPTIONS: "-Xmx768M -Xms768M -XX:+UseG1GC -XX:+AlwaysPreTouch -XX:MaxGCPauseMillis=50 -XX:InitiatingHeapOccupancyPercent=70"
      DATABASE_URL: jdbc:postgresql://db:5432/rinha
      REDIS_URL: redis
      MAX_POOL_SIZE: 16
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '1GB'

  api2: # API - Instância 02
    image: rinha-backend-kotlin
    hostname: api2
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    expose:
      - "8080"
    environment:
      JAVA_TOOL_OPTIONS: "-Xmx768M -Xms768M -XX:+UseG1GC -XX:+AlwaysPreTouch -XX:MaxGCPauseMillis=50 -XX:InitiatingHeapOccupancyPercent=70"
      DATABASE_URL: jdbc:postgresql://db:5432/rinha
      REDIS_URL: redis
      MAX_POOL_SIZE: 16
    deploy:
      resources:
        limits:
          cpus: '0.35'
          memory: '1GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.2GB'

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
    command: redis-server --save "" --appendonly no # Disable persistence
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.2GB'

  db: # Banco de dados
    image: postgres:15
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: rinha
      POSTGRES_PASSWORD: rinha
      POSTGRES_DB: rinha
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rinha"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '0.8GB'
