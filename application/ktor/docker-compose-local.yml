# 3GB RAM - WITH CACHE
# - 2 API instances with .75GB RAM each (1.5 total)
# - 1 Load Balancer with .3GB RAM (1.8 total)
# - 1 Redis with .2GB RAM (2 total)
# - 1 Database with 1GB RAM (3 total)
# 1.5 CPU
# - 2 API instances with .35 CPU each (.7 total)
# - 1 Load Balancer with .2 CPU (.9 total)
# - 1 Redis with .1 CPU (1 total)
# - 1 Database with .5 CPU (1.5 total)

# 3GB RAM - WITHOUT CACHE
# - 2 API instances with .75GB RAM each (1.5 total)
# - 1 Load Balancer with .5GB RAM (2 total)
# - 1 Database with 1GB RAM (3 total)
# 1.5 CPU
# - 2 API instances with .3 CPU each (.6 total)
# - 1 Load Balancer with .2 CPU (.8 total)
# - 1 Database with .7 CPU (1.5 total)

version: '3.5'
services:
  api1: &api # API - Instância 01
    image: rinha-de-backend-q3-2023-ktor
    hostname: api1
    depends_on:
      db:
        condition: service_healthy
#      redis:
#        condition: service_started
    expose:
      - "8080"
    environment:
      # https://docs.oracle.com/en/java/javase/11/gctuning/garbage-first-garbage-collector-tuning.html#GUID-0770AB01-E334-4E23-B307-FD2114B16E0E
      # https://docs.oracle.com/cd/E40972_01/doc.70/e40973/cnf_jvmgc.htm#autoId2
      JAVA_TOOL_OPTIONS: "-Xmx512M -Xms512M -XX:+UseG1GC -XX:+AlwaysPreTouch -XX:MaxGCPauseMillis=50 -XX:InitiatingHeapOccupancyPercent=70"
      DATABASE_DRIVER: com.mysql.cj.jdbc.Driver
      DATABASE_URL: jdbc:mysql://db:3306/rinha
      MAX_POOL_SIZE: 240
#      DATABASE_DRIVER: org.postgresql.Driver
#      DATABASE_URL: jdbc:postgresql://db:5432/rinha
#      MAX_POOL_SIZE: 224
      REDIS_URL: redis
      DISABLE_EXPOSED: true
      DISABLE_CACHE: true
      ENGINE: Netty
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.75GB'
    networks:
      - rinha

  api2: # API - Instância 02
    <<: *api
    hostname: api2

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ../../nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      api1:
        condition: service_healthy
      api2:
        condition: service_healthy
    ports:
      - "9999:9999"
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:9999"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.5GB'
    networks:
      - rinha

#  redis:
#    image: redis:latest
#    ports:
#      - '6379:6379'
#    command: redis-server --save "" --appendonly no # Disable persistence
#    deploy:
#      resources:
#        limits:
#          cpus: '0.1'
#          memory: '0.2GB'
#    networks:
#      - rinha

#  db:
#    image: postgres:15
#    volumes:
#      - ../../db/postgres:/docker-entrypoint-initdb.d
#    environment:
#      POSTGRES_USER: rinha
#      POSTGRES_PASSWORD: rinha
#      POSTGRES_DB: rinha
#    ports:
#      - "5432:5432"
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U rinha"]
#      interval: 5s
#      timeout: 5s
#      retries: 10
#    deploy:
#      resources:
#        limits:
#          cpus: '0.7'
#          memory: '1GB'
#    networks:
#      - rinha

  db:
    image: mysql:8
    volumes:
      - ../../db/mysql/scripts:/docker-entrypoint-initdb.d
      - ../../db/mysql/my.cnf:/etc/my.cnf
    environment:
      MYSQL_USER: rinha
      MYSQL_PASSWORD: rinha
      MYSQL_DATABASE: rinha
      MYSQL_ROOT_PASSWORD: dev
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: '1GB'
    networks:
      - rinha

networks:
  rinha: